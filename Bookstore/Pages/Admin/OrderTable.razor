@*Creating a table dynamically that displays certain parts of an order. To be used in the Orders page*@

<table class="table table-sm table-striped table-bordered">

    <tbody>
        @if (Orders?.Count() > 0)
        {
            @foreach (Order o in Orders)
            {
                <tr>
                    <td>@o.FirstName</td>
                    <td>@o.LastName</td>
                    <td>@o.Zip</td>
                    <th>Book</th>
                    <th>Quantity</th>

                    <td>
                        <button class="btn btn-sm btn-danger" @onclick="@(x => OrderSelected.InvokeAsync(o.OrderId))">
                            @ButtonLabel
                        </button>
                    </td>
                </tr>

                @foreach (CartLineItem cli in o.Lines)
                {
                    <tr>
                        <td colspan="3"></td>
                        <td>@cli.Book.Title</td>
                        <td>@cli.Quantity</td>
                    </tr>
                }
            }
        }
        else
        {
            <tr>
                <td colspan="5" class="text-center">No Orders</td>
            </tr>
        }

    </tbody>

</table>

@code {

    [Parameter]
    public string TableTitle { get; set; } = "Orders";

    [Parameter]
    public IEnumerable<Order> Orders { get; set; }

    [Parameter]
    public string ButtonLabel { get; set; } = "Completed";

    [Parameter]
    public EventCallback<int> OrderSelected { get; set; }

}